(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[499],{2499:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>g});var r=n(9320),i=n(7140),o=n(8354),l=n(8095),a=n(8267);function s(){let[e,t]=(0,i.useState)([]),[n,r]=(0,i.useState)(""),[o,l]=(0,i.useState)([]),[a,s]=(0,i.useState)(null);(0,i.useEffect)(()=>{(async()=>{try{let e=await fetch("https://raw.githubusercontent.com/AdamFehse/map-app/gh-pages/storymapdata_db_ready_v2.json");if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let n=await e.json();t(n);let r=[...new Set(n.map(e=>e.ProjectCategory).filter(Boolean))];l(r)}catch(e){e&&"object"==typeof e&&"message"in e?s(e.message):s("Unknown error")}})()},[]);let c=(0,i.useMemo)(()=>n?e.filter(e=>e.ProjectCategory===n):e,[e,n]),u=(0,i.useCallback)(e=>{r(e)},[]),m=(0,i.useCallback)(()=>e.filter(e=>e.Artworks&&e.Artworks.length>0),[e]),d=(0,i.useCallback)(()=>e.filter(e=>e.Poems&&e.Poems.length>0),[e]),f=(0,i.useCallback)(()=>{let t=new Set;return e.forEach(e=>{e.Activities&&e.Activities.forEach(e=>{t.add(e)})}),Array.from(t)},[e]);return{projects:e,filteredProjects:c,categories:o,error:a,filterProjects:u,getProjectsWithArtworks:m,getProjectsWithPoems:d,getUniqueActivities:f}}n(8560),n(2964);var c=n(2873),u=n.n(c);n(1932);let m=e=>{let{map:t,projects:n}=e,r=(0,i.useRef)(null);return(0,i.useEffect)(()=>{if(!t||!n||0===n.length)return;r.current&&(t.removeLayer(r.current),r.current=null);let e=u().markerClusterGroup({iconCreateFunction:function(e){let t=e.getChildCount(),n="#1976d2",r=40;return t>=100?(n="#d32f2f",r=60):t>=10&&(n="#388e3c",r=50),u().divIcon({html:'\n            <svg width="'.concat(r,'" height="').concat(r,'" viewBox="0 0 ').concat(r," ").concat(r,'">\n              <circle cx="').concat(r/2,'" cy="').concat(r/2,'" r="').concat(r/2-3,'" fill="').concat(n,'" stroke="#fff" stroke-width="3"/>\n              <text x="50%" y="55%" text-anchor="middle" font-size="').concat(r/2.5,'" fill="#fff" font-weight="bold" dominant-baseline="middle">').concat(t,"</text>\n            </svg>\n          "),className:"custom-cluster-icon",iconSize:[r,r]})}});return n.forEach(t=>{if(t.Latitude&&t.Longitude){let n=u().marker([t.Latitude,t.Longitude],{icon:function(){let{className:e="custom-marker",iconSize:t=[24,24],iconAnchor:n=[12,24],html:r=""}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return u().divIcon({className:e,iconSize:t,iconAnchor:n,html:r})}()});n.bindPopup("\n          <strong>".concat(t.ProjectCategory,"</strong>\n          <br />\n          A pretty CSS3 popup. <br /> Easily customizable.\n        ")),e.addLayer(n)}}),e.addTo(t),r.current=e,()=>{r.current&&(t.removeLayer(r.current),r.current=null)}},[t,n]),null};var d=n(3056);function f(){let e=(0,o.ko)(),t=(0,i.useRef)(null),n=(0,i.useRef)(null),r=(0,i.useRef)(null),{projects:l}=s();return(0,i.useEffect)(()=>{if(!e||!l.length)return;let i=u().svg();i.addTo(e);let o=l.map((e,t)=>({project:e,long:e.Longitude,lat:e.Latitude,value:8+t%3,x0:0,y0:0,x:0,y:0}));o.forEach(function(t){let n=e.latLngToLayerPoint([t.lat,t.long]);t.x0=n.x,t.y0=n.y});let a=d.Ltv(e.getPanes().overlayPane).select("svg");t.current=a.node();let s=a.selectAll("circle").attr("class","Dots").data(o).join("circle").attr("id","dotties").attr("cx",e=>e.x).attr("cy",e=>e.y).attr("r",e=>e.value).style("fill","blue").attr("stroke","blue").attr("stroke-width",3).attr("fill-opacity",.4).style("cursor","pointer").on("click",function(t,n){u().popup().setLatLng([n.lat,n.long]).setContent("\n            <strong>".concat(n.project.ProjectCategory,"</strong>\n            <br />\n            A pretty CSS3 popup. <br /> Easily customizable.\n          ")).openOn(e)}).on("mouseover",function(){d.Ltv(this).style("fill","#1976d2").attr("fill-opacity",.7)}).on("mouseout",function(){d.Ltv(this).style("fill","blue").attr("fill-opacity",.4)});r.current=s;let c=d.tXi(o).force("x",d.KS8().x(e=>e.x0)).force("y",d.TSS().y(e=>e.y0)).force("collide",d.eRw(e=>1.2*e.value)).on("tick",()=>{s.attr("cx",e=>e.x).attr("cy",e=>e.y)}).tick(300);n.current=c;let m=function(){o.forEach(function(t){let n=e.latLngToLayerPoint([t.lat,t.long]);t.x0=n.x,t.y0=n.y,c.force("x",d.KS8().x(e=>e.x0)).force("y",d.TSS().y(e=>e.y0))}),c.alpha(1).restart()};return e.on("zoomend",m),()=>{e.off("zoomend",m),n.current&&n.current.stop(),r.current&&r.current.remove(),e.removeLayer(i)}},[e,l]),null}function h(){let e=(0,o.ko)(),t=(0,i.useRef)(null);return(0,i.useEffect)(()=>{if(!e)return;if(!document.getElementById("leaflet-mask-plugin-script")){let e=document.createElement("script");e.id="leaflet-mask-plugin-script",e.textContent='\n      (function() {\n        if (L.TileLayer.Mask) return;\n        L.TileLayer.Mask = L.TileLayer.extend({\n          options: { maskSize: 512 },\n          getMaskSize: function() { var s = this.options.maskSize; return s instanceof L.Point ? s : new L.Point(s, s); },\n          setCenter: function(containerPoint) {\n            if (arguments.length === 2) { this.setCenter(L.point(arguments[0], arguments[1])); return; }\n            if (this._map) {\n              var p = this._map.containerPointToLayerPoint(containerPoint);\n              p = p.subtract(this.getMaskSize().divideBy(2));\n              this._image.setAttribute("x", p.x);\n              this._image.setAttribute("y", p.y);\n            }\n          },\n          _initContainer: function() {\n            if (this._container) return;\n            var rootGroup = this._map.getRenderer(this)._rootGroup;\n            var defs = rootGroup.appendChild(L.SVG.create("defs"));\n            var container = rootGroup.appendChild(L.SVG.create("g"));\n            var mask = defs.appendChild(L.SVG.create("mask"));\n            var image = mask.appendChild(L.SVG.create("image"));\n            var size = this.getMaskSize();\n            mask.setAttribute("id", "leaflet-tilelayer-mask-" + L.stamp(this));\n            mask.setAttribute("x", "-100%");\n            mask.setAttribute("y", "-100%");\n            mask.setAttribute("width", "300%");\n            mask.setAttribute("height", "300%");\n            image.setAttribute("width", size.x);\n            image.setAttribute("height", size.y);\n            image.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", this.options.maskUrl);\n            container.setAttribute("mask", "url(#" + mask.getAttribute("id") + ")");\n            this._container = container;\n            this._image = image;\n            this.setCenter(this._map.getSize().divideBy(2));\n          },\n          _updateLevels: function() {\n            var zoom = this._tileZoom;\n            if (zoom === undefined) return undefined;\n            for (var z in this._levels) {\n              if (!this._levels[z].el.firstChild && z !== zoom) {\n                L.DomUtil.remove(this._levels[z].el);\n                this._removeTilesAtZoom(z);\n                delete this._levels[z];\n              }\n            }\n            var level = this._levels[zoom];\n            if (!level) {\n              var map = this._map;\n              level = { el: this._container.appendChild(L.SVG.create("g")), origin: map.project(map.unproject(map.getPixelOrigin()), zoom).round(), zoom: zoom };\n              this._setZoomTransform(level, map.getCenter(), map.getZoom());\n              L.Util.falseFn(level.el.offsetWidth);\n              this._levels[zoom] = level;\n            }\n            this._level = level;\n            return level;\n          },\n          _addTile: function(coords, container) {\n            var tilePos = this._getTilePos(coords);\n            var tileSize = this.getTileSize();\n            var key = this._tileCoordsToKey(coords);\n            var url = this.getTileUrl(this._wrapCoords(coords));\n            var tile = container.appendChild(L.SVG.create("image"));\n            tile.setAttribute("width", tileSize.x);\n            tile.setAttribute("height", tileSize.y);\n            tile.setAttribute("x", tilePos.x);\n            tile.setAttribute("y", tilePos.y);\n            tile.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", url);\n            this._tiles[key] = { el: tile, coords: coords, current: true };\n          },\n          _setZoomTransform: function(level, center, zoom) {\n            var scale = this._map.getZoomScale(zoom, level.zoom),\n              translate = level.origin.multiplyBy(scale).subtract(this._map._getNewPixelOrigin(center, zoom)).round();\n            level.el.setAttribute("transform", "translate(" + translate.x + "," + translate.y + ")");\n          }\n        });\n        L.tileLayer.mask = function(url, options) { return new L.TileLayer.Mask(url, options); };\n      })();\n    ',document.body.appendChild(e)}let n=()=>{let e=document.createElement("canvas");e.width=512,e.height=512;let t=e.getContext("2d");return t?(t.fillStyle="black",t.fillRect(0,0,512,512),t.fillStyle="white",t.beginPath(),t.arc(256,256,512/3,0,2*Math.PI),t.fill(),e.toDataURL()):null},r=n=>{if(t.current){let r=e.latLngToContainerPoint(n.latlng);t.current.setCenter(r)}},i=()=>{if(u().tileLayer.mask){let i=n();if(i){let n=u().tileLayer.mask("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{maskUrl:i,maskSize:512,attribution:"&copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"});t.current=n,n.addTo(e),e.on("mousemove",r);let o=e.latLngToContainerPoint(e.getCenter());n.setCenter(o)}}else setTimeout(i,100)};return i(),()=>{e.off("mousemove",r),t.current&&(e.removeLayer(t.current),t.current=null)}},[e]),null}function p(e){let{view:t,projects:n,showMarkers:i}=e,l=(0,o.ko)();switch(t){case"observable":return(0,r.jsx)(f,{});case"base":return i?(0,r.jsx)(m,{map:l,projects:n}):null;default:return null}}function g(e){let{view:t,isMaskEnabled:n,showMarkers:i=!0,center:o=[31.313354,-110.945987],zoom:c=7}=e,{projects:u,error:m}=s();return m?(0,r.jsxs)("div",{children:["Error: ",m]}):0===u.length?(0,r.jsx)("div",{children:"Loading..."}):(0,r.jsxs)(l.W,{center:o,zoom:c,style:{height:"100vh",width:"100%",position:"relative"},zoomControl:!1,children:[(0,r.jsx)(a.e,{url:"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}",attribution:'\xa9 <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',minZoom:0,maxZoom:16}),(0,r.jsx)(p,{view:t,projects:u,showMarkers:i}),n&&(0,r.jsx)(h,{})]})}},2964:()=>{}}]);